// CellButtonRenderer.js – 재사용 가능한 ag‑Grid 셀 버튼 렌더러 (<sp-button>)
// • cellRendererParams.label  → 버튼 텍스트 (기본: '버튼')
// • cellRendererParams.style  → 추가 인라인 스타일 문자열
// • Vue 쪽으로만 'cell-button-click' 이벤트 emit

export class CellButton {
  /** @param {ICellRendererParams} params */
  init(params) {
    this.params = params;

    /* 1️⃣ sp-button이 커스텀 엘리먼트가 아닐 수 있으니 일반 button으로 생성 후 클래스 적용 */
    const btn = document.createElement('button');
    btn.className = 'sp-button';  // sp-button 클래스 적용
    btn.setAttribute('small', '');
    btn.style.cssText = `
      height: 24px;
      width: 100%;
      cursor: pointer;
      border: 1px solid #ccc;
      background: #fff;
      border-radius: 4px;
      padding: 4px 8px;
      font-size: 12px;
    `;

    /* 라벨 지정 */
    const label = params?.colDef?.cellRendererParams?.label || '버튼';
    btn.textContent = label;

    /* 추가 스타일 주입 */
    const extra = params?.colDef?.cellRendererParams?.style;
    if (extra) {
      btn.style.cssText += `;${extra}`;
    }

    /* 2️⃣ 클릭 → Vue componentParent 로 emit (컬럼 ID 포함) */
    btn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      console.log('Button clicked', {
        colId: params.column.getColId(),
        data: params.data
      });

      // Vue 컴포넌트 찾기 (여러 방법으로 시도)
      let vueComponent = null;

      // 방법 1: context.componentParent
      if (params.context && params.context.componentParent) {
        vueComponent = params.context.componentParent;
      }
      
      // 방법 2: gridOptions.context
      if (!vueComponent && params.api.gridOptionsWrapper.gridOptions.context) {
        vueComponent = params.api.gridOptionsWrapper.gridOptions.context.componentParent;
      }

      // 방법 4: ag-grid 이벤트 API 사용
      if (!vueComponent) {
        const gridOptions = params.api.getGridOptions();
        if (gridOptions.context && gridOptions.context.componentParent) {
          vueComponent = gridOptions.context.componentParent;
        }
      }

      // 방법 5: 직접 부모 DOM에서 Vue 인스턴스 찾기
      if (!vueComponent) {
        let parentEl = btn.parentElement;
        while (parentEl && !vueComponent) {
          if (parentEl.__vue__) {
            vueComponent = parentEl.__vue__;
            break;
          }
          parentEl = parentEl.parentElement;
        }
      }

      // Vue 컴포넌트를 찾았다면 이벤트 emit
      if (vueComponent && typeof vueComponent.$emit === 'function') {
        vueComponent.$emit('cellButtonClick', {
          colId: params.column.getColId(),
          data: params.data
        });
        console.log('Event emitted to Vue component');
      } else {
        console.warn('Vue component not found or $emit not available', {
          context: params.context,
          vueComponent
        });
      }
    });

    this.eGui = btn;
  }

  getGui() {
    return this.eGui;
  }

  refresh(params) {
    this.params = params;

    /* 라벨 & 스타일 갱신 */
    const lbl = params?.colDef?.cellRendererParams?.label;
    if (lbl) this.eGui.textContent = lbl;

    const sty = params?.colDef?.cellRendererParams?.style;
    if (sty) {
      // 기존 스타일 초기화 후 다시 적용
      this.eGui.style.cssText = `
        height: 24px;
        width: 100%;
        cursor: pointer;
        border: 1px solid #ccc;
        background: #fff;
        border-radius: 4px;
        padding: 4px 8px;
        font-size: 12px;
        ${sty}
      `;
    }

    return true;
  }

  destroy() {
    if (this.eGui) {
      this.eGui.remove();
      this.eGui = null;
    }
  }
}

/* ========== 사용 예 ==========
Vue 컴포넌트에서:

1. ag-grid 설정 시 context에 Vue 컴포넌트 전달:
gridOptions: {
  context: {
    componentParent: this
  },
  // ... 기타 옵션
}

2. 컬럼 정의:
{
  field: 'action',
  headerName: 'Action',
  cellRenderer: CellButton,
  cellRendererParams: {
    label: '상세',
    style: 'background:#e91e63; border-color:#e91e63; color:white;'
  },
  width: 100,
  resizable: false,
  sortable: false
}

3. Vue 컴포넌트에서 이벤트 리스너:
methods: {
  onCellButtonClick(eventData) {
    console.log('셀 버튼 클릭됨:', eventData);
    // eventData.colId : 컬럼 ID
    // eventData.data  : 행 데이터
  }
}

<template>
  <ag-grid-vue
    @cellButtonClick="onCellButtonClick"
    :gridOptions="gridOptions"
    ...
  />
</template>
*/