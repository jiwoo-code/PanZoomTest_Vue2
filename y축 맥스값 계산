function getYAxisMax(value) {
  if (value <= 0) return 0;

  const pow10 = Math.pow(10, Math.floor(Math.log10(value)));
  // 0.1 ~ 10까지 다양한 배율 (5~9 구간 맞추기 위함)
  const factors = [0.1, 0.2, 0.3, 0.5, 1, 2, 3, 5, 10];

  let bestAxisMax = null;
  let bestStep = null;

  for (const f of factors) {
    const step = f * pow10;
    if (step <= 0) continue;

    const axisMax = Math.ceil(value / step) * step;
    const ticks = axisMax / step;

    // 조건: 5~9 구간
    if (ticks >= 5 && ticks <= 9) {
      // 항상 더 "거친" step(큰 step)을 우선 선택
      if (bestAxisMax === null || step > bestStep ||
         (step === bestStep && axisMax < bestAxisMax)) {
        bestAxisMax = axisMax;
        bestStep = step;
      }
    }
  }

  // 후보가 없으면 안전망 (10배수로 올림)
  if (bestAxisMax == null) {
    const step = 10 * pow10;
    return Math.ceil(value / step) * step;
  }
  return bestAxisMax;
}