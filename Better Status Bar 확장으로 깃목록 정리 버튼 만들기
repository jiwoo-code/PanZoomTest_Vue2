vscode statusbar commands로 확장 사용

{
  "statusbarCommands.alignment": "Right",
  "statusbarCommands.commands": [
    {
      // 🗑 브랜치 삭제 버튼
      "statusBarText": "🗑 브랜치 삭제",
      "tooltipText": "브랜치 삭제 메뉴 열기",
      "color": "#ffb300",
      "command": "git.deleteBranch"
    },
    {
      // 🧹 브랜치 정리 버튼
      // - PowerShell 전용 터미널 "branch-clean"에서 실행
      // - 없으면 새로 열고, 있으면 재사용
      // - 실행 후 터미널로 포커스 이동
      // - 동작:
      //   1. git fetch -p
      //   2. development에 병합된 로컬 브랜치 중
      //      - main/master/development 제외
      //      - 원격에 없는 브랜치만 삭제
      //   3. 로그: skipping / deleted / keeping 출력
      "statusBarText": "🧹 브랜치 정리",
      "tooltipText": "PowerShell에서 원격 삭제 브랜치 정리 (development 기준, main/master/development 보호)",
      "color": "#c8c800",
      "command": "workbench.action.terminal.sendSequence",
      "args": [
        {
          "text": "git fetch -p; $branches = git for-each-ref --format='%(refname:short)' refs/heads --merged development; foreach ($b in $branches) { if ($b -in @('main','master','development')) { Write-Output \\\"skipping $b\\\" } elseif (-not (git show-ref --verify --quiet refs/remotes/origin/$b)) { git branch -d $b; Write-Output \\\"deleted $b\\\" } else { Write-Output \\\"keeping $b\\\" } }",
          "terminal": {
            "name": "branch-clean",
            "shellPath": "powershell",
            "singleInstance": true,
            "focus": true,   // 👉 실행 후 포커스를 PowerShell 터미널로 이동
            "clear": false
          }
        }
      ]
    }
  ]
}