WITH
/* 1) lot: 이전 col11 계산 */
lot AS (
    SELECT
        lot.col1,
        lot.col11,
        LAG(lot.col11, 1) OVER (PARTITION BY lot.col1 ORDER BY lot.col11) AS prev_col11,
        lot.col13
    FROM table2 AS lot
    WHERE /* ...조건... */
),

/* 2) st: 평균시간 계산 */
st AS (
    SELECT
        std.*,
        AVG(col14) OVER (PARTITION BY std.col1, std.col2, std.col3) AS aaa_time,
        AVG(col15) OVER (PARTITION BY std.col1, std.col2, std.col3) AS bbb_time
    FROM common.table3 AS std
    WHERE /* ...조건... */
),

/* 3) reason: 사유 집계 */
reason AS (
    SELECT
        /* 필요한 컬럼들 */,
        col2,
        col17
    FROM table
    WHERE /* ...조건... */
    GROUP BY /* 그룹 키 */
),

/* 4) design: 최신 1건만 선택 */
design AS (
    SELECT *
    FROM (
        SELECT
            /* 필요한 컬럼들 */,
            col21,
            ROW_NUMBER() OVER (PARTITION BY /* 키 */ ORDER BY /* 정렬 컬럼 */ DESC) AS rn
        FROM common.tableA
        WHERE /* ...조건... */
    ) t
    WHERE rn = 1
),

/* 5) cal_t: 메인 결합 */
cal_t AS (
    SELECT
        loh.col1,
        loh.col2,
        COALESCE(loh.col3, loh.col4) AS col4,
        ROW_NUMBER() OVER (PARTITION BY loh.col2, loh.col5 ORDER BY loh.col6 DESC) AS col_num,
        st.col7,
        st.col8,
        lot.col9,
        design.col10
    FROM table1 AS loh
    JOIN lot
      ON loh.col12 = lot.col11
     AND split_part(loh.col12, '_', 1) = lot.col13
    LEFT JOIN st
      ON loh.col16 = st.col16
     AND /* 추가 조건 */
    LEFT JOIN reason
      ON loh.col2  = reason.col2
     AND loh.col17 = reason.col17
    LEFT JOIN design
      ON st.col20 = design.col21
    WHERE /* ...조건... */
),

/* 6) prevt: col3 기준 lag */
prevt AS (
    SELECT
        x.col2,
        x.col3,
        MIN(x.ppp_col) AS ppp_col
    FROM (
        SELECT
            ct.col1,
            ct.col2,
            ct.col3,
            LAG(ct.col3, 3, ct.col3) OVER (PARTITION BY ct.col1 ORDER BY ct.col3) AS ppp_col
        FROM cal_t AS ct
        WHERE ct.col3 IS NOT NULL
    ) x
    GROUP BY x.col2, x.col3
)

SELECT
    ct.*,
    prevt.ppp_col
FROM cal_t AS ct
LEFT JOIN prevt USING (col2, col3)
ORDER BY ct.col3, ct.col_num;