function MyHeader() {}

MyHeader.prototype.init = function (params) {
  this.params = params;

  const eGui = document.createElement('div');
  eGui.className = 'ag-header-cell-label';
  eGui.style.display = 'flex';
  eGui.style.alignItems = 'center';
  eGui.style.justifyContent = 'space-between';
  eGui.style.cursor = 'pointer';

  // ❗ 버튼 (왼쪽)
  const infoButton = document.createElement('button');
  infoButton.innerText = '❗';
  infoButton.style.marginRight = '4px';
  infoButton.style.background = 'none';
  infoButton.style.border = 'none';
  infoButton.style.cursor = 'pointer';
  infoButton.addEventListener('click', (e) => {
    e.stopPropagation(); // 정렬 트리거 막음
    alert(`이미지 버튼 클릭됨: ${params.column.getColDef().field}`);
  });

  // 컬럼명
  const label = document.createElement('span');
  label.className = 'ag-header-cell-text';
  label.innerText = params.displayName;

  // 정렬 아이콘 영역
  const sortOrderIcon = document.createElement('span');
  sortOrderIcon.className = 'ag-header-icon ag-sort-order';

  const sortAscIcon = document.createElement('span');
  sortAscIcon.className = 'ag-header-icon ag-sort-ascending-icon';

  const sortDescIcon = document.createElement('span');
  sortDescIcon.className = 'ag-header-icon ag-sort-descending-icon';

  // 필터 메뉴 버튼
  const menuIcon = document.createElement('span');
  menuIcon.className = 'ag-header-icon ag-header-cell-menu-button';
  menuIcon.addEventListener('click', (e) => {
    e.stopPropagation(); // 정렬 막고 메뉴만 열림
    params.showColumnMenu(menuIcon);
  });

  // 왼쪽 그룹 (❗ + 컬럼명)
  const left = document.createElement('div');
  left.style.display = 'flex';
  left.style.alignItems = 'center';
  left.appendChild(infoButton);
  left.appendChild(label);

  // 오른쪽 그룹 (정렬 + 필터)
  const right = document.createElement('div');
  right.style.display = 'flex';
  right.style.alignItems = 'center';
  right.style.gap = '4px';
  right.appendChild(sortOrderIcon);
  right.appendChild(sortAscIcon);
  right.appendChild(sortDescIcon);
  right.appendChild(menuIcon);

  // 클릭 시 정렬 동작
  eGui.addEventListener('click', () => {
    if (params.enableSorting) {
      params.progressSort();
    }
  });

  eGui.appendChild(left);
  eGui.appendChild(right);
  this.eGui = eGui;
};

MyHeader.prototype.getGui = function () {
  return this.eGui;
};



.my-custom-header-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  /* background-color: white; ← 제거 */
  padding: 0 4px;
  box-sizing: border-box;
  font-size: inherit;
  color: inherit;
}

.my-header-button {
  background: none;
  border: none;
  cursor: pointer;
  padding: 2px;
  font-size: inherit;
  color: inherit;
}








<!-- MyHeader.vue -->
<template>
  <div class="ag-header-cell-label custom-header" @click="onHeaderClick">
    <!-- 왼쪽 버튼 -->
    <button class="info-button" @click.stop="onInfoClick">❗</button>

    <!-- 컬럼명 -->
    <span class="ag-header-cell-text">{{ displayName }}</span>

    <!-- 오른쪽: 정렬/필터 아이콘 -->
    <span class="ag-header-icon ag-sort-order"></span>
    <span class="ag-header-icon ag-sort-ascending-icon"></span>
    <span class="ag-header-icon ag-sort-descending-icon"></span>
    <span
      class="ag-header-icon ag-header-cell-menu-button"
      @click.stop="showMenu"
    ></span>
  </div>
</template>

<script>
export default {
  props: ['params'],
  computed: {
    displayName() {
      return this.params.column.getColDef().headerName || this.params.column.getColDef().field;
    }
  },
  methods: {
    onInfoClick() {
      alert(`이미지 표시 예정: ${this.params.column.getColDef().field}`);
    },
    onHeaderClick() {
      if (this.params.enableSorting) {
        this.params.progressSort(); // 정렬 동작 트리거
      }
    },
    showMenu(event) {
      this.params.showColumnMenu(event.currentTarget);
    }
  }
};
</script>

<style scoped>
.custom-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.info-button {
  margin-right: 4px;
  background: none;
  border: none;
  cursor: pointer;
  font-size: inherit;
  color: inherit;
}
</style>


columnDefs: [
  {
    field: 'status',
    headerName: '상태',
    headerComponentFramework: MyHeader, // ✅ Vue 컴포넌트로 설정
    sortable: true,
    filter: true
  }
]